var fs = require('fs');
var express = require('express');
var bodyParser = require('body-parser');
var async = require('async');
var app = express();
var Connection = require('./connection');
var Models = require('./models');
var ExtraListItem = require('./generator/subObjects').ExtraListItem;

// Start Mongoose
Connection.init();

// Body parser configuration
app.use(bodyParser.urlencoded({
  extended: true
}));
app.use(bodyParser.json());
app.use('/data/images', express.static(__dirname + '/data/images'));

app.use(function(req, res, next) {
  res.header('Access-Control-Allow-Origin', '*');
  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');
  res.header('Access-Control-Allow-Headers', 'X-Requested-With, X-HTTP-Method-Override, Content-Type, Accept');
  res.header('Content-Type', 'application/json; charset=utf-8');
  next();
});

app.use(function(req, res, next) {
  if (req.method === 'OPTIONS') {
    console.log('Options success');
    var headers = {};
    headers["Access-Control-Allow-Origin"] = "*";
    headers["Access-Control-Allow-Headers"] = "origin, content-type, accept, wsVers, lang, dev, osVers, res, reach, scheme, Authorization, devid";
    headers['Access-Contrl-Allow-Methods'] = 'PUT, POST, GET, DELETE, OPTIONS';
    headers["Content-Type"] = "application/json; charset=utf-8";
    res.writeHead(200, headers);
    res.end();
  } else {
    next();
  }
});

// Default response shell
var response = {
  "status": {
    "retC": 0,
    "retCDescription": "Réponse OK!"
  },
  "results": {}
}
// Default
app.get('/', function(req, res, next) {
  res.send('Mocks api');
});

//********* Planet *********//

// Get WordingPage
app.get('/getWordingPage', function(req, res, next) {
  console.log('getWordingPage');
  var wordingPath = '/data/planetservices/getWordingPage';
  fs.readFile(__dirname + wordingPath, 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

// Get Wording
app.get('/getWordings', function(req, res, next) {
  var mode = req.query.mode;
  var wordingPath = '/data/planetservices/getWordings';
  try {
    console.log('getWordings' + '-' + mode);
    fs.readFile(__dirname + wordingPath + '-' + mode, 'utf8', function(err, data) {
      if (err) throw err;
      res.json(JSON.parse(data));
    });
  } catch (e) {
    // Fallback for retro-compatibility
    console.log('getWordings retro compatible');
    fs.readFile(__dirname + wordingPath + "-kiosk", 'utf8', function(err, data) {
      if (err) throw err;
      res.json(JSON.parse(data));
    });
  }
});

/* EXTRAS LIST & SERVICES */
// Booking services
app.get('/getBookingServices', function(req, res, next) {
  console.log('Call to getBookingServices');

  // Simulate long delay
  //console.log('Wait...');
  //var waitTill = new Date(new Date().getTime() + 30 * 1000);
  //while(waitTill > new Date()){};

  var Service = Models.Service;
  Service.find({}, {
    '_id': 0,
    '__v': 0,
    'villas': 0,
    'selections': 0,
    'image.normal': 0
  }, function(err, services) {
    if (err)
      res.send(err);
    response.results = services;
    res.json(response);
  });
});

// Booking service
app.get('/getBookingServices/:code', function(req, res, next) {
  var code = req.params.code;
  console.log('Call to getBookingService ' + code);
  var Service = Models.Service;
  Service.findOne({
    code: code
  }, {
    '_id': 0,
    '__v': 0,
    'image.thumbnail': 0,
    'villas._id': 0
  }, function(err, service) {
    if (err)
      res.send(err);
    response.results = service;
    res.json(response);
  });
});

// Booking extrasList
app.get('/getBookingExtrasCategories', function(req, res, next) {
  console.log('Call to getBookingExtrasCategories');
  var Extra = Models.Extra;
  Extra.aggregate({
    $project: {
      codeTheme: 1,
      theme: 1,
      codeCategory: 1,
      category: 1
    }
  }, {
    $unwind: '$theme'
  }, {
    $group: {
      _id: {
        code: '$codeTheme',
        title: '$theme'
      },
      extraItems: {
        $addToSet: {
          code: '$codeCategory',
          title: '$category'
        }
      }
    }
  }, function(err, results) {
    if (err)
      res.send(err);
    var extrasList = [];
    results.forEach(function(result) {
      extrasList.push(new ExtraListItem(result._id.code, result._id.title, result.extraItems));
    });
    response.results = extrasList;
    res.json(response);
  });

});

// Booking extras
app.get('/getBookingExtrasCategories/:code', function(req, res, next) {
  var code = req.params.code;
  console.log('Call to getBookingExtrasCategories ' + code);
  var Extra = Models.Extra;
  Extra.find({
    codeCategory: code
  }, {
    '_id': 0,
    '__v': 0,
    'codeTheme': 0,
    'theme': 0,
    'codeCategory': 0,
    'category': 0,
    'fields': 0,
    'selections': 0,
    'image.normal': 0
  }, function(err, extras) {
    if (err)
      res.send(err);
    response.results = extras;
    res.json(response);
  });
});

// Booking extra
app.get('/getBookingExtras/:code', function(req, res, next) {
  var code = req.params.code;
  console.log('Call to getBookingExtras ' + code);
  var Extra = Models.Extra;
  Extra.findOne({
    code: code
  }, {
    '_id': 0,
    '__v': 0,
    'codeTheme': 0,
    'theme': 0,
    'codeCategory': 0,
    'category': 0,
    'image.thumbnail': 0,
    'fields._id': 0,
    'selections._id': 0
  }, function(err, extra) {
    if (err)
      res.send(err);
    response.results = extra;
    res.json(response);
  });
});

// Booking preferences
app.get('/getBookingPreferences', function(req, res, next) {
  console.log('Call to getBookingPreferences');
  async.parallel({
    preferences: function(callback) {
      var Preference = Models.Preference;
      Preference.find({}, {
        '_id': 0,
        '__v': 0
      }, function(err, preferences) {
        if (err)
          res.send(err);
        callback(null, preferences);
      });
    },
    villas: function(callback) {
      var Villa = Models.Villa;
      Villa.find({}, {
        '_id': 0,
        '__v': 0
      }, function(err, villas) {
        if (err)
          res.send(err);
        callback(null, villas);
      });
    }
  }, function(err, results) {
    if (err)
      res.send(err);
    results.readonly = false;
    results.price = {
      "value": 4300,
      "currency": "€",
      "unit": {
        "code": "5DA55A1EA6",
        "title": "par cottage"
      }
    };
    response.results = results;
    res.json(response);
  });
});

// /setBookingPreferences
app.post('/setBookingPreference', function(req, res, next) {
  console.log('Call to setBookingPreference');
  var newPreferences = req.body.preferences;
  var newVilla = req.body.villa;

  async.series({
    resetPref: function(callback) {
      var Preference = Models.Preference;
      Preference.update({}, {
        'selected': false
      }, {
        multi: true
      }, function(err) {
        callback(null);
      });
    },

    resetVilla: function(callback) {
      var Villas = Models.Villa;
      Villas.update({}, {
        'selected': false
      }, {
        multi: true
      }, function(err) {
        callback(null);
      });
    },

    function(callback) {
      if (newVilla != '') {
        var Villa = Models.Villa;
        Villa.find({
          'label': newVilla
        }, function(err, villas) {
          if (err)
            res.send(err);
          var currentVilla = villas[0];
          if (typeof(currentVilla) !== 'undefined') {
            currentVilla.selected = true;
            currentVilla.save();
          }
        });
      }

      if (newPreferences.length > 0) {
        var count = 0;
        newPreferences.forEach(function(preferenceCode) {
          var Preference = Models.Preference;
          Preference.find({
            'code': preferenceCode
          }, function(err, preferences) {
            if (err)
              res.send(err);
            var currentPref = preferences[0];
            currentPref.selected = true;
            currentPref.save(function(err) {
              count += 1;
              if (count === newPreferences.length) {
                callback(null);
              }
            });
          });
        });
      }

      if (newPreferences.length == 0) {
        callback(null);
      }

    },
    preferences: function(callback) {
      var Preference = Models.Preference;
      Preference.find({}, {
        '_id': 0,
        '__v': 0
      }, function(err, preferences) {
        if (err)
          res.send(err);
        callback(null, preferences);
      });
    },
    villas: function(callback) {
      var Villa = Models.Villa;
      Villa.find({}, {
        '_id': 0,
        '__v': 0
      }, function(err, villas) {
        if (err)
          res.send(err);
        callback(null, villas);
      });
    }
  }, function(err, results) {
    if (err)
      res.send(err);

    results.readonly = false;
    results.price = {
      "value": 4300,
      "currency": "€",
      "unit": {
        "code": "5DA55A1EA6",
        "title": "par cottage"
      }
    };
    response.results = results;
    res.json(response);
  });
});

// Booking Paris Activities list
app.get('/getBookingParisActivities', function(req, res, next) {
  console.log('Call to getBookingParisActivities list ');
  fs.readFile(__dirname + '/data/planetservices/getBookingParisActivities', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

// Booking Paris Activity
app.get('/getBookingParisActivities/:code', function(req, res, next) {
  console.log('Call to getBookingParisActivities single ');
  fs.readFile(__dirname + '/data/planetservices/getBookingParisActivities-Single', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

// Booking Paris Hosts
app.get('/getBookingParisHosts', function(req, res, next) {
  console.log('Call to getBookingParisHosts ');
  fs.readFile(__dirname + '/data/planetservices/getBookingParisHosts', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

// set Booking Paris Hosts
app.post('/setBookingParisHost', function(req, res, next) {
  console.log('Call to setBookingParisHost ');
  fs.readFile(__dirname + '/data/planetservices/setBookingParisHost', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

// set Booking Paris Hosts
app.post('/setBookingParisSession', function(req, res, next) {
  console.log('Call to setBookingParisSession ');
  fs.readFile(__dirname + '/data/planetservices/setBookingParisSession', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

// setBookingBasket
app.post('/setBookingBasket', function(req, res, next) {
  console.log('Call to setBookingBasket ');
  fs.readFile(__dirname + '/data/planetservices/setBookingBasket', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

// setBookingBasketLight
app.post('/setBookingBasketLight', function(req, res, next) {
  console.log('Call to setBookingBasketLight ');
  fs.readFile(__dirname + '/data/planetservices/setBookingBasketLight', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

// setBookingBasket
app.post('/setBookingBasketConfirm', function(req, res, next) {
  console.log('Call to setBookingBasketConfirm');
  fs.readFile(__dirname + '/data/planetservices/setBookingBasketConfirm', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

/* EARN */
// Get Coupons
app.get('/getCoupons', function(req, res, next) {
  console.log('Call to getCoupons');
  fs.readFile(__dirname + '/data/planetservices/getCoupons', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});
// Select Coupons
app.post('/selectCoupon', function(req, res, next) {
  console.log('Call to selectCoupon');
  fs.readFile(__dirname + '/data/planetservices/selectCoupon', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

/* e-Ticket */
// getUser
app.get('/getUser', function(req, res, next) {
  console.log('Call to getUser');
  fs.readFile(__dirname + '/data/planetservices/getUser', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});
// getNrfInfos
app.get('/getNrfInfos', function(req, res, next) {
  console.log('Call to getNrfInfos');
  fs.readFile(__dirname + '/data/planetservices/getNrfInfos', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});
// setNrfHost
app.post('/setNrfHost', function(req, res, next) {
  console.log('Call to setNrfHost');
  fs.readFile(__dirname + '/data/planetservices/setNrfHost', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});
// deleteNrfHost
app.post('/deleteNrfHost', function(req, res, next) {
  console.log('Call to setNrfHost');
  fs.readFile(__dirname + '/data/planetservices/deleteNrfHost', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});
// setNrfExtras
app.post('/setNrfExtras', function(req, res, next) {
  console.log('Call to setNrfExtras');
  fs.readFile(__dirname + '/data/planetservices/setNrfExtras', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

// getNrfTicket
app.get('/getNrfTicket', function(req, res, next) {
  console.log('Call to getNrfTicket');
  fs.readFile(__dirname + '/data/planetservices/getNrfTicket', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

/* Kiosk */
// getConfigKiosk
app.get('/getConfigKiosk', function(req, res, next) {
  console.log('Call to getConfigKiosk ');
  fs.readFile(__dirname + '/data/planetservices/getConfigKiosk', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

// getUserKiosk
app.get('/getUserKiosk', function(req, res, next) {
  console.log('Call to getUserKiosk');
  var lastName = req.query.lastname;
  var arrivalDate = req.query.arrivalDate;
  var booking = req.query.booking;

  try {
    if (typeof(arrivalDate) === 'undefined') {
      if (lastName === 'US1' || lastName === 'us1' || booking === '123456') {
        fs.readFile(__dirname + '/data/planetservices/getUserKiosk', 'utf8', function(err, data) {
          if (err) throw err;
          res.json(JSON.parse(data));
        });
      } else {
        if (lastName === 'US2' || lastName === 'us2' || booking === '654321') {
          fs.readFile(__dirname + '/data/planetservices/getUserKiosk_error_arrival_date', 'utf8', function(err, data) {
            if (err) throw err;
            res.json(JSON.parse(data));
          });
        } else {
          fs.readFile(__dirname + '/data/planetservices/getUserKiosk_error_authentification', 'utf8', function(err, data) {
            if (err) throw err;
            res.json(JSON.parse(data));
          });
        }
      }
    } else {
      fs.readFile(__dirname + '/data/planetservices/getUserKiosk', 'utf8', function(err, data) {
        if (err) throw err;
        res.json(JSON.parse(data));
      });
    }
  } catch (e) {
    fs.readFile(__dirname + '/data/planetservices/getUserKiosk_error_authentification', 'utf8', function(err, data) {
      if (err) throw err;
      res.json(JSON.parse(data));
    });
  }
});

// setBookingParisBasket
app.post('/setBookingParisBasket', function(req, res, next) {
  console.log('Call to setBookingParisBasket ');
  fs.readFile(__dirname + '/data/planetservices/setBookingParisBasket', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

// setBookingParisTransaction
app.post('/setBookingParisTransaction', function(req, res, next) {
  console.log('Call to setBookingParisTransaction ');
  fs.readFile(__dirname + '/data/planetservices/setBookingParisTransaction', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

// cancelBookingTransaction
app.post('/cancelBookingTransaction', function(req, res, next) {
  console.log('Call to cancelBookingTransaction ');
  fs.readFile(__dirname + '/data/planetservices/cancelBookingTransaction', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

//********* Paperless *********//

// authenticate
app.post('/authenticate', function(req, res, next) {
  console.log('Call to authenticate ');
  fs.readFile(__dirname + '/data/paperless/authenticate', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

// numero
app.post('/numero', function(req, res, next) {
  console.log('Call to numero ');
  var uid = req.body.uid;
  var cottage = req.body.cottage;
  var bookingid = req.body.booking;

  try {

    if (bookingid !== undefined) {
      console.log('numero-bookingid');
      if (bookingid === '803172') {
        fs.readFile(__dirname + '/data/paperless/numero', 'utf8', function(err, data) {
        if (err) throw err;
          res.json(JSON.parse(data));
        });
      } else {
        console.log('numero-bookingid-unknown');
        fs.readFile(__dirname + '/data/paperless/numero-unknown', 'utf8', function(err, data) {
        if (err) throw err;
          res.status(401);
          res.json(JSON.parse(data));
        });
      }

    } else {
      if (cottage === '3409') {
        if (uid.startsWith('046B0F')) {
          console.log('numero');
          fs.readFile(__dirname + '/data/paperless/numero', 'utf8', function(err, data) {
          if (err) throw err;
            res.json(JSON.parse(data));
          });
        } else {
          console.log('numero-tooshort');
          fs.readFile(__dirname + '/data/paperless/numero-tooshort', 'utf8', function(err, data) {
          if (err) throw err;
            res.status(401);
            res.json(JSON.parse(data));
          });
        }
      } else {
        if (cottage === '3410') {
          console.log('numero-token');
          fs.readFile(__dirname + '/data/paperless/numero-token', 'utf8', function(err, data) {
          if (err) throw err;
            res.status(401);
            res.json(JSON.parse(data));
          });
        } else {
          console.log('numero-unknown');
          fs.readFile(__dirname + '/data/paperless/numero-unknown', 'utf8', function(err, data) {
          if (err) throw err;
            res.status(401);
            res.json(JSON.parse(data));
          });
        }
      }

    }
  } catch (e) {
    fs.readFile(__dirname + '/data/paperless/numero-unknown', 'utf8', function(err, data) {
    if (err) throw err;
      res.status(401);
      res.json(JSON.parse(data));
    });
  }
});

// activities
app.get('/activities', function(req, res, next) {
  console.log('Call to activities ');
  fs.readFile(__dirname + '/data/paperless/activities', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

// services
app.get('/services', function(req, res, next) {
  console.log('Call to services ');
  fs.readFile(__dirname + '/data/paperless/services', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

// payments
app.get('/payments', function(req, res, next) {
  console.log('Call to payments ');
  fs.readFile(__dirname + '/data/paperless/payments', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

//********* Wristband *********//

// infos
app.post('/infos', function(req, res, next) {
  console.log('Call to infos ');
  fs.readFile(__dirname + '/data/wristband/infos', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

// infos
app.post('/transaction', function(req, res, next) {
  console.log('Call to transaction ');
  fs.readFile(__dirname + '/data/wristband/transaction', 'utf8', function(err, data) {
    if (err) throw err;
    res.json(JSON.parse(data));
  });
});

app.listen(3300);